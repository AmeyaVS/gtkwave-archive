3.0.0	01may06	Initial release after promotion from 1.3.86 in order to reduce
		confusion with 2.x series.
		Added user's manual pdf file to distribution in doc/.
		Added vertex and rtlbrowse for sourcecode annotation.
3.0.1	09may06	Automatically add extensions to save filenames in gtkwave.
		Cygwin compile fixes.  Add Cygwin functionality for fork() 
		related ops that do in fact work properly.
3.0.2   09may06 More fixes for full function (except pthreads) in Cygwin.  
		Requires usage of Cygserver if rtlbrowse is to work.
		Fixed fonts for Cygwin to improve readability.  
		The Courier font is very bad looking and blitter mangled under
		cygwin.
3.0.3	29may06	Changed yylineno references in vlex.l in rtlbrowse to 
		my_yylineno as newer versions of flex automatically define 
		this and cause duplicate symbols.
		Saw there were still problems with courier on debian.  Also
		check for misc-fixed on non-cygwin systems just in case.
3.0.4	30may06 Added busy watch (hourglass) for long ops that lock the GUI.
		Fixed replace function in treesearch_gtk2 so it doesn't
		simply replace with the last signal.  (Iterator shouldn't
		be used the way it was.)
3.0.5	08jun06 Reworked tree structure code to handle new tree layout
		such that strings are embedded at the end of struct.  This
		reduces memory usage overall.
		Added in implicit hierarchy split on pipe character in
		symbol names as these only really happen in netlists that
		have escaped identifiers.
		For vzt and lxt2 loaders added block allocation of symbols
		and nodes during init in order to allow denser memory
		allocation as the bookkeeping overhead between allocations
		internal to malloc() is unnecessary as the number of
		elements is known at the outset.  Also removed hashing in
		aet2, lxt, lxt2, vzt as sym[hv] is unused on sorted facs.
		Removed unnecessary strlen() calls after sprintf() in the
		dumpfile loaders as the string length is known from the rc
		of sprintf.
		Fixed T_SCOPE rule in vcd.c as dotted hierarchies would
		throw off the parser as hierarchies themselves are 
		(in practice) never really escaped.
		In tree.c, treenamefix() would recurse more than necessary
		such that some dotted hierarchies would cause an order of
		n squared recursion and as such never complete running
		due to the size of the hierarchy.
		Found non _2 versions of memory allocate/free being used
		in various non-library places.
		Fixed signal aliasing problems in GHW traces that have
		memories or aliased signals in ghw.c.
		Added handling for e8 datatypes and arrays in ghwlib.c
		and ghw.c.
		Updated ghwlib.c and main.c in order to handle gzip or
		bzip2 compressed files.  Extension can be .ghw, .ghw.gz,
		or .ghw.bz2 and the file will be handled properly.  Note
		that as the matchword is consulted, just .ghw can be used
		to specify a gzip or bzip2 file implicitly.
		Added ghwdump and ghwdump.1 to the distribution (from ghdl)
		as it is helpful for debugging ghw file failures.
3.0.6	14jul06	Added "Real" option for data type display as passing around
		real numbers in Verilog across modules needs to be done
		with $realtobits and $bitstoreal.
		Added scripting command flag --script in order to allow 
		autosetup of things that are outside of config file control.
		This also allows doing things such as automated print jobs.
		Added --nowm to remove window manager control on most
		windows the viewer brings up.
		Added --xid to allow turning the viewer into a plug-in for
		calling by foreign applications.  This will allow integration
		of the viewer into a single window for example, with IDEs.
		Added --nomenus to remove menus for the case when used in
		conjunction with --xid and it is desired to create an
		embedded wave viewer applet that cannot initiate file I/O
		on its own.  Note that earlier versions of GTK+ cannot 
		handle menu events properly from a GtkPlug.
		Fixed problem with dead memory allocations for GtkColor 
		structs in color.c as found by Valgrind.
		Moved .odt version of the user's guide into doc/ rather than
		the pdf version as this is a sourcecode distribution so the
		original word processor document should be there.  The .pdf
		will still be up on the homepage on the website.
		Added example script (for use with the -S option) in the
		examples/ directory that prints some waves then exits.
		Found problem with directive-based string embedding in older
		gcc compiler versions.
		GTK+-1.2 doesn't handle GtkPlug.
3.0.7   17jul06 Added support for dualview of waveforms using GtkPlug and
		shared memory IPC through use of the "twinwave" front end.
		Updated documentation to add a section on twinwave.
3.0.8	04aug06	Modified order of flags in twinwave as appending flags
		does not work when longopt isn't used.
		Subscripted GtkItemFactoryEntry menu_items for AIX compile.
		More AIX fixes such as conditional alloca.h usage and
		not including getopt.h.
		Removed unused "bus" element from struct fac.
		Added interactive loading of vcd files with the routines in
		vcd_partial.c.  Added shmidcat to the distribition to test 
		this new interactive loading functionality.
		Added real_parameter vartype (Riviera Aldec 2006.6) in all
		vcd loaders.
3.0.9	10aug06	Fixing compiler warnings across various systems.
		Minor speedup in sigcmp() in bitvec.c for EOS detection.
		Fix in vcd_partial.c loader that crashed on interactive
		loads when blank traces are present in the save file.
3.0.10	13aug06	Found inadvertant 64/32 bit conversion in regex.c that was
		from not including "debug.h" header file.
		Missing headers for gcc-3.2.x and earlier dealing with
		select().
		Converted fgetmalloc() to use vlists in order to cut
		down on the backflips and traversal required for the old
		one character per struct method.
		Added VCD recoder that stores the VCD in memory using a
		new recoding scheme rather than histents.  HistEnt structs
		are created as needed.  The old VCD loader is still used for
		--interactive, or if --legacy is used at the command line.
		Added dynamic zlib compression support to VCD recoder and
		vlist_compression_depth rc variable.  -1 disables, 0-9
		mirror zlib compression depths.
3.0.11	12sep06	Updated documentation to include section on VCD recoding
		strategy and LXT (version 1) file format.
		Removed unnecessary mallocs and functions in vcd_recoder.c.
		Cleanup of all warnings with gcc -pedantic in gcc3
		excluding long long integer constant and string constant
		length warnings.
		Disabled splash screen when loading VCD from stdin.
		Cygwin compile fixes (3.0.10 broke the compile).
3.0.12	19sep06	Updated production rule in verilog.g to handle compiling
		parameterized components in opensparc without dying.
		Integrated a lot of compatibility fixes from Peter O'Gorman.
		Actually use config.h for better compatibility now.
		Check for endianness in vzt read/write if XDRs not available
		rather than assuming windows will byte reverse.
		Fixed single time read in vzt_read.c as it wasn't working
		properly in rtlbrowse.
		Added -f (insert args from file) option to vertex.
3.0.13	06oct06	Updated odt file documentation to make chapter-like page
		breaks.
		Updated lxt2vcd and vzt2vcd to emit proper VCD headers for
		other tools that expect them.
		Added attempt_vecmatch() in bitvec.c to match vectors based
		on numbers inside nets in order to match on vectors inside
		of flattened netlist latches (e.g., top.xyz[0:7]_Z).
		Fixed regex compare on illegal regexs that caused viewer
		crash (e.g., when comparing on a single left bracket or
		any other illegal regex).
3.0.14	17oct06	Fixed vztminer and lxt2miner so not specifying -n actually
		works.  Updated manpages and UM for those executables to
		fix description errors.
		Now can snap cursor to named markers--this was overlooked.
		Changed recoder scheme for single bits slightly in order
		to pack 2 more bits in for 0/1 transitions.  This implies
		that 0..31 timesteps can be encoded in 1 byte for the
		common case.
3.0.15	27oct06	Added getopt_long from GNU project.
		Fixed broken compile under GTK1 for rtlbrowse makefile.
		Now can recoalesce bitblasted vectors in rtlbrowse.
		Updated finalize in vcd recoder to add fake 'x' vch for
		non-aliased facilities.  Normally all facs are initialized,
		but noticed that libvcddump doesn't do this.
3.0.16	13nov06	Patches to remove some compile warnings under Cygwin.
		Changed maxdata linker flag for AIX to allow 3.25GB of
		data segment area for AIX5.3.
		Changed unsigned integer splay comparisons in vzt_write.c
		for a slight speedup.
		Updated configure patch scripts to patch over a "LEX = :"
		glitch for AIX5.3 and also to use gcc in AIX for the pccts
		compile because of xlc incompatibilities with it.
		Fixed bug in draw_hptr_trace_vector_analog() that would
		cause crashes on pure real vectors when zoomed out fully.
		Added dynamic tooltips on current marker values for both
		the left and middle mouse buttons (not tested for Win32 
		yet so disabled there).
		Added preliminary support for changing menu accelerators
		through the rc file with an "accel" statement.
3.0.17	27nov06	Fix in vcd recoder for SystemC which doesn't emit time
		zero in the initial dumpvars.  (would be needed anyway for
		dumpers that for some reason don't as the 1st value
		change collapses into the second)
3.0.18  28nov06	Fix in vcd saver for when units are in seconds: keeps 
		timescale of "ss" being used instead of just "s".
		Locale problem in printing of floating point numbers fixed
		by setting up a local fixer routine in config.h for
		availability across all executables.
		Fix in all vcd loaders to handle "port" (along with other
		keywords) that appear in non-keyword parts of the $VAR
		declaration sequence.
		Fixed long standing LXT bug with integer datatype on 
		trivial LXT files.  (Overflow in lt_buf decoder buffer.)
3.0.19	21dec06	More locale fixing with LC_ALL.
		Added user patches from NIIBE Yutaka to remove requirement
		for the GTK_ENABLE_BROKEN flag in GTK2 compilation.
3.0.20	21jan07	Fixed string/real handling in VCD recoder as it did not
		properly add the right-hand side endcaps which would
		crash pattern search.
		Made vcd recoder more robust to be able to handle 'b'
		value changes for string data as well as wires with
		's' type data (for FlashSim).
		Updated strace.c to allow forward/backward on strings and
		reals.
3.0.21	02feb07	Added support for in/out/inout evcd ports generated by
		dumpports in ModelSim.
		Fixed problem with hierarchy being out of order as 
		treegraft needed to be followed by treesort.  This mostly
		impacted recursive hierarchy imports by only allowing
		two signals to import rather than all of them.  Also there
		was an inconsistency with the signal ordering with VCD vs
		the database formats because of this.
3.0.22	19feb07	Bumped up hash size from 65519 to 500009 entries for VCD
		parsers.  
		Bumped up max VCDID fastindex size to 8M entries.
		Now use gperf for verilog datatypes for some speedup in
		gtkwave vcd loaders.
		create_sorted_table() changed to deallocate long names in
		vcd converters as the names are no longer needed once the
		writer has them.
		Fixed GTK1 makefile in src/ as twinwave had pkg-config
		for GTK2.
		Stray getopt.h include in v2l_analyzer_lxt2.h needed to
		be #ifdef'ed with HAVE_GETOPT_H for Solaris.
		XDR library -lnsl explicitly listed for Solaris.
		PATH_MAX set if not defined in verilog.g for Vertex.
		Regenerated configure for setenv()/unsetenv() presence
		which impacts Solaris (use putenv() instead).
		Regenerated configure to handle auto detect of -lnsl, 
		-lrpc, and -lpthread.
		Added -c to file install in top-level makefile (Solaris).
		Use _LARGEFILE_SOURCE value from configure with linux
		rather than assuming it is always 1 with linux.
		Fix to preproc.c in vertex as it was attempting to parse
		directories.  This works ok under linux with EOF but causes
		problems under AIX.
3.0.23	19mar07	Added corresponding va_end() for all va_start().
		Added optional frequency display between markers, also added
		rc variable of use_frequency_display and menu options to
		support this.
		Placed mainbox for marker text label widgets inside an event
		box as this seems to fix the centering problems with GTK2.
3.0.24	02apr07	Fixed makefile generation so 32bit AIX will use >256MB in
		src/helpers.
		Updated vzt2vcd and lxt2vcd so it handles the zero index of
		bitblasted vectors (from ncsim).
		Updated vzt reader so it can re-coalesce bitblasted vectors
		provided the dumped bits are adjacent/in order.
		Minor bugfixes to vztminer and lxt2miner with respect to
		dumpon/dumpoff (don't emit $dumpon/$dumpoff strings as
		that code was leftover from the vzt2vcd).
		Updated manpages for vzt2vcd, lxt2vcd, and vztminer.
		On concatenated vector loads ('#'/':' in savefile), attempts
		to do a load of a monolithic vector on fail.  This is 
		somewhat related to the re-coalesce vectors feature above.
		Implemented reverse of this for monolithic vectors into
		the '#' bitstrand variants.
3.0.25	10apr07	System Verilog with MTI fix for VCD declarations of form 
		$var reg 64 >w #implicit-var###VarElem:ram_di[0.0] [63:0] $end
		...debussy implicitly escapes the varname during loading so 
		gtkwave does it too now for all VCD loaders.
		More System Verilog with MTI fixes: VCD (parameter) vars of 
		length zero are representative of reals with MTI: they don't
		use real_parameter like Riviera does.
		Updated vcd_saver.c to handle saving these implicit-var
		facilities correctly.  Likewise updated lxt-write.c,
		lxt2_write.c, and vzt_write.c to handle correct bracket
		stripping for the [0.0] semantics.
		Modified dynamic resize routine so large escaped names don't
		cause issues with the signal window crowding out the
		wave window.
3.0.26	18apr07	Fixed various compiler warnings discovered from looking at
		Fedora Core compile logs and later compiling against
		Centos/RHEL5.
		Commented out GTK_CAN_FOCUS for scollbars in wavewindow
		as it was causing rendering problems with newer versions
		of GTK.
3.0.27	27apr07	Renamed vertex to vermin to avoid name clashes with
		existing 3D "vertex" package on debian systems.
		Reverted back to using Open Office 2 Beta rather than
		Open Office 2 as it was causing .odt docs corruption.
3.0.28	30apr07	Changed anonymous union in struct Node as it is a
		gcc extension.
		Fixed some vcd parser memory leaks found by Valgrind.
		Moved errno check in vcd parser as it seems that
		the GTK event loop called in splash_sync() calls it
		on gnome 2.18 for some reason (reported by Gentoo
		gtkwave package maintainer).
3.0.29	27may07	Added viewer support for arrays (currently AE2 only).
		Integrated (standard) ./configure scheme thanks to
		Dan McMahill
		Added strdup_2 to debug.c for memory tracking (found
		stray strdup() instances in ghw.c).
3.0.30	24jul07	Removed variable declaration in menu.h that tcc
		complained about (should have been an extern).
		Updated configure.ac to use AC_SYS_LARGEFILE for
		> 2GB file compatibility with older linux systems.
		(This was accidentally left out in 3.0.29.)
		Added ignore_savefile_pos and ignore_savefile_size
		rc variables.  (Requested by Edward Ash.)
		Added ability to specify trace background color in
		filter processes by prefixing the return string with
		?color? as in "?CadetBlue?xor r0,r0,r0".  The colors
		used must already be specified in the rgb.c file.
		Removed check for c++ compiler presence in the
		autoconf.
		Fixed LIBBZ_CFLAGS in .am files that really should
		be LIBBZ2_CFLAGS.
3.1.0	25aug07	Moved to a global context variable management scheme
		for future code expansion.  Reload waveform function
		added which uses context management.  Update user
		manual to include references to reload capability.
3.1.1	20sep07	Fixed crash in hierarchy search reload.  (Wrong
		pointer type introduced from code cleanup.)  Adding
		start of tabbed browsing support.  Put in window
		select focus switching between tabs (e.g., on 
		search windows).  Added locking in main iteration
		loop to detect unexpected context switches and
		fix/report them (wrong operation if it occurs).
3.1.2	24dec07	Compiler warning cleanups from Sun compile logs.
		Added named parameter support to vermin parser.
		Added check for gperf back into configure.ac.
		Added vlist_spill rc variable to control new 
		feature of spilling vlists to a tempfile on disk.
		Fixed vcd loader status bar on files > 2GB.
		Removed non-growable vlists and also finalize
		aliases in order to be compatible with spill.
		Changed vlist allocation scheme to allocate only
		half as much per-block, then the rest when the
		half-way point is reached.  This reduces memory
		wastage to an average of 12.5% rather than 25%
		on uncompressed blocks.
		Added code to pre-process data in vlists through
		an LZ-based compressor.  The can cut down on
		memory usage ever further.  This can be enabled
		with the vlist_prepack rc variable.
		Added --giga option to turn on vlist_spill and
		vlist_prepack from the command line.
3.1.3	13jan08	Added dynamic keypress detection in the Pattern Search 
		Requester so users do not need to press enter for search 
		strings.  Likewise, added the rc variable sst_dynamic_filter 
		to enable the same type behavior for the signal name filter in
		the GTK2 signal search tree.
		Fixed bug where filtered signal names did not reappear on 
		reload.
		Updated user manual as necessary.
		Added "edge" left/right buttons for handy single signal edge 
		detection due to user requests.
		Fixed long-standing backward edge seek bug in pattern search.
		(It would miss the preceeding edge if the marker isn't already
		on one.)
		Added use_standard_clicking rc variable in order to enable 
		"normal GTK" shift/click semantics in the signal window.
		Collapse/uncollapse is now shift-ctrl when 
		use_standard_clicking is active.
		Added prelim dnd for use_standard_clicking mode.
		use_standard_clicking disabled in GTK-1.2 as there are dnd 
		issues.
		Recalculate signal width on reload as sometimes it was missed.
		Added input focus capability to signalwindow.
		Moving menu options to standard GTK accelerator keys.
		Added Ctrl-A/Shift-Ctrl-A handler to the treeview so it acts 
		like the signal window.
		Added left/right scrolling hotkeys in signal window.
		Added use_toolbutton_interface environment variable which 
		enables new user interface at the top of screen.
		More modifications to handle globals swapping in multi-tab 
		mode.
		Update configure.ac to handle library order problem with
		cygwin in rtlbrowse.
		Added scrollwheel support in signal window when focused and 
		standard clicking is active.
		Added "Use Color" and "Use Black and White" (for screendumps)
		View menu options from user requests.
		Fixed help window so it is not editable.  Also do an implicit
		click-to-front for window managers that automatically move
		windows to front when their insides (not decorations) are
		clicked on.
3.1.4	30jan08	Added fix for how dnd gets killed after reload on new
		versions of GTK (e.g., 2.10.14).
		Added dirty_kick in MaxSignalLength that forces usize if
		width is dirty.
		For interpolated analog traces, fixed interpolation at
		end of line so it doesn't cause endpoint to go offscreen.
		Experimenting with track-and-hold fixing.
		Integrated spice3f5 poly interpolation routines, but are
		currently unused.
		Now allow both interpolated+step simultaneously for analog.
		Integrating signal window popup menu code.
		Fixed rendering bugs in coalesced vectors displayed as analog.
		Added resizing options that are windowed to either the screen
		or across all trace data.
		Added enter=OK as a default file chooser response.
		Added DND and standard clicking to GTK1 compiles.
3.1.5	14feb08	Fixed bug in rtlbrowse that causes lxt2 dumps not to be value
		annotated.  (signal match worked for bitblasted nets only)
		Updated rtlbrowse so that it can update dynamically with the
		marker position.
		Added anti-aliased font rendering code.
		Added use_pango_fonts rc variable.
		Updated edge buttons so they can handle multiply selected
		signals.
		Logfile(s) now update on waveform reload.
		MinGW compile fixes.  MinGW crash on reload fixed.
3.1.6	27feb08	Added additional #ifdefs that disable Pango on GTK versions
		less than 2.8.0.
		Added support for optional sideband .aetinfo files when
		using .aet files.  Update interface to rtlbrowse to
		translate time value back to original aet ones.
		Improved x vs X (z vs Z, etc) handling at signal boundaries.
		Changed color scheme where red marks X data similar to how
		it marks U for VHDL.
		Fixed longstanding bug in linear lxts that only occurs if
		integers are present in the lxt dump (length is failed to
		be promoted to 32 during re-chaining).
		Fixed shift-clicking when use_standard_clicking is active
		such that shift-clicks past the last trace when the
		signalwindow isn't fully populated count as a shift-click
		on the last trace.
3.1.7	23mar08	Updated file.c to remove potential file chooser crash in
		the case of a missing save file at the command line followed
		by "write save file as".
		Fixed problem in black and white mode where process filter
		could possible cause colors to be displayed when ?color?
		value escaping is used.
		Fixed problem where primary marker was listed as 0 sec on
		init instead of -- if not set initially from a save file.
3.1.8	06apr08	Added Range Fill option in the data format menu so
		that vectors like address[31:2] will display as a human
		expects to read them.  Fill in can be zeros or ones.
		Added trace flags display at right hand side of signal name
		in mouseover popup window.
		Added more visual feedback in signal D&D window in order
		for users to determine more easily where a drop will insert.
		Reduced visual noise on D&D by not updating screen after a
		cut if a paste also occurs.
		Fixed problem where primary marker was filtered through
		time_trunc() on initialization.  Removed other time_trunc()
		calls causing similar problems as necessary.
3.1.9	20apr08	Added missing init_filetrans_data() to reload function.
		Updated manfiles to get them in line with Debian lintian.
3.1.10	14may08	Added missing adjustment of t->shift in mouseover.c in 
		order to allow the mouseover on shifted traces to display 
		properly.
		Fixed problem with edgebutton going back two edges on a
		combined vector.  (Cut and paste typo from strace.c.)
		Added support for DND from regex search window to the
		signal/waveareas.
3.1.11	18jun08	Compile fix for tla2vcd in MinGW.
		Added #ifdef for HAVE_BZERO for MinGW.
		Compiler warning fixes.
		Added time = -1 endcaps in LXT2+VZT+AET loaders.
3.1.12	14jul08 Compiler warning fixes.
		Fixed crash in vcd recoder for b vs 01xz mixups in
		malformed VCD files.
		Fixed abort on VCD load for malformed size vs 
		[msi:lsi] syntax.  NC does this on arrays of wires.
		Fix to vlist reader with --giga enabled in order to
		handle reads which go off the end of the file.
		(Possible due to how only the amount used in a block
		is actually written to the file in order to save
		space, so the vlist blocks can be overlapping yet
		usable.)
3.1.13	20aug08	Adding compressed hierarchy handling in order to
		reduce memory usage on large bitblasted models.
		This is currently only enabled for the VCD recoder,
		LXT, LXT2, and VZT loaders.
		Fixed some buffer overflows in vectorization code
		(and when vectorization is enabled) in vzt_read.c.
		Modification to autoconf handling for rpc.h.
		Fix for DnD to directly under an expanded comment
		trace.
		Make step_increment equal to 1/10 page_increment
		for the horizontal scroller in the wavewindow.
		Added sticky click semantics for clicks in signal
		window.  To do this in the treesearch_gtk2 file
		will require some additional future work with 
		view_selection_func() and/or signal handling and
		trapping.
3.2.0	16feb09	Fix for strings ('s' type) in recoder.  
		Added timestart command to savefiles which indicates
		what the leftmost position should be on reload.
		Added support for as/zs small timescales as well as
		0.1/0.01/0.001 multipliers which simvision can emit.
		Adding signal name DnD support from external apps.
		Force open tree nodes on initial .sav file read.
		Yet more new warning (-Wall) cleanups.
		Fixed ExtractNodeSingleBit for vectors which do not 
		have a zero in either the msb or lsb (e.g., [1:9]).
		Added support for dragging files into the viewer
		(i.e., dumpfile, savefile, stems file)
		Added DnD of signal names from RTLBrowse source code
		windows	directly into gtkwave.  
		GTK1 compiler compatibility fixes.
		Improved search performance from rtlbrowse initiated
		DnD searches.
		Fixed wave_locale.h for MinGW.
		Fixed longstanding bug with blackout regions
		rendering.
		Integrating embedded Tcl interpreter.
		Fixed bug with unformat time when base time is in
		seconds.
		Added tcl example in examples/ directory.
		Updated -f argument file handling in vermin.
		Updated tcl_helper code so that signalwindow drags of bit-
		blasted vectors are properly re-coalesced for client code
		for the drag.		
		Updated task definition in vermin so that identifiers with
		dots in them can be used as task enable names.
		Fixed problem in vermin preprocessor where defines in 0x0d0a
		terminated lines would insert the carriage return into the
		sourcecode.
		Added synthesis pragmas which mirror synopsys ones to vermin.
		Used gtk_window_set_default_size instead of gtk_widget_set_usize
		in rtlbrowse in order to allow window to shrink appropriately.
		Made size_tag values smaller in logfile.c in gtkwave/rtlbrowse.
		Allow dragging from rtlbrowse window without needing to high-
		light signals first.  This allows single signal drags.
		GCC-4.1.3 with -O3 flag fix for x86_64 on xchgb instruction
		assembler intrinsic.
		Use gtk_window_set_transient_for() on simplereq windows.
		Starting to update environment for rtlbrowse into a single
		integrated window.
		Adjust xthickness/ythickness in toolbars to make images
		take up less space.
		Preliminary support for text searching in rtlbrowse.
		Added rtlbrowse case (in)sensitive searching both directions.
		Fix re-entrancy on file names for file.c file requester in
		gtkwave.
		Add --with-tcl to configure script via tcl.m4 macro.
		Cut down on visual noise during reload.
		Added fix using TCL_INCLUDE_SPEC to get to compile under
		Ubuntu.
		Fixed lost num_cpus variable that wasn't passing through reload.
		Added Cut/Copy/Paste functionality that allows multiple pastes
		rather than destroying the cut buffer on paste.  Cut buffer
		contents will survive after a reload operation.
		Removed translate filter process from mingw32 menu as it
		is disabled in the compile by #ifdef'ing in empty functions.
		Updated shmidcat so it restarts properly when VCD is being
		looked at while sim is running and gtkwave gets ahead of
		the generated VCD.
		Fix crash on invalid node for force tree open during load.
		Added Partial VCD Dynamic Zoom and related zoom_dynamic
		rc variables.
		Added prelim support for export to TimingAnalyzer file format.
		Added mouseover support in signal window which shows full
		facility name.
		Added dynamic update on strings for marker values which keeps
		user from having to press enter explicitly for each one.
		Now allow support for named markers using optional user names
		rather than just 'A'-'Z' labels.
		Added countdown timer to remove dnd cursor if it is onscreen
		longer than 5 seconds.
		Added support for setting optional user names for named markers
		via Tcl scripts.
		Added prelim auto-scrolling code for trace adds/copies.
		Added support for Tcl repscripts.
		Removed warnings found when compiling with -Wshadow.
		Fix for stack crash in treesort() on dumpfiles with an 
		extremely large number of signals (e.g., 5 million).
		Compile fixes for rtlbrowse in older versions of GTK2.
		Remove stray tempfiles created by --giga writer under MinGW.
		Removed stray file descriptor from lxt on reload.
		Fixed repeat error problem in lxt.c introduced by -Wshadow fix.
		Added prelim version of scale_to_time_dimension rc variable and 
		appropriate menu options.
		Beginning to update user manual to reflect new 3.2 features.
		Added Partial VCD Dynamic Zoom To End and related 
		zoom_dynamic_end rc variables.
		More mingw compile fixes: the whole tarball compiles now.
		Use old file chooser (for now) in mingw as the new one seems
		not to be re-sizeable.
		Added "copy traces" to toolbar in gtkwave as copy function now
		exists.
		Added check for "server" in env var CYGWIN before printing warning
		out about using shared memory.
		Added vpi client lxt/lxt2/vzt writers in contrib/vpi, but these
		currently are not built.
		Compatibility fix for gcc 3.x.
		Added extload capability which grabs data via popen().  This 
		allows adding loaders for unsupported formats via data mining.
		Added Tcl command setBaselineMarker.
		Extload hardening on reload.
